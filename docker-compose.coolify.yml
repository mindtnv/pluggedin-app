services:
  pluggedin-postgres:
    container_name: pluggedin-postgres
    image: postgres:16.2-alpine3.18
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pluggedin-postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h ${POSTGRES_HOST:-pluggedin-postgres} -p ${POSTGRES_PORT:-5432} -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  drizzle-migrate:
    container_name: pluggedin-migrate
    build:
      context: .
      dockerfile: Dockerfile
      target: migrator
    restart: "no"
    command: >
      sh -c "
        echo 'Waiting for database to be ready...';
        until pg_isready -h ${POSTGRES_HOST:-pluggedin-postgres} -p ${POSTGRES_PORT:-5432} -U ${POSTGRES_USER}; do
          echo 'Database is unavailable - sleeping';
          sleep 2;
        done;
        echo 'Database is up - running migrations';
        pnpm drizzle-kit migrate
      "
    env_file:
      - .env
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST:-pluggedin-postgres}:${POSTGRES_PORT:-5432}/${POSTGRES_DB}}
      PGUSER: ${POSTGRES_USER}
      PGHOST: ${POSTGRES_HOST:-pluggedin-postgres}
      PGDATABASE: ${POSTGRES_DB}
    depends_on:
      pluggedin-postgres:
        condition: service_healthy

  pluggedin-app:
    container_name: pluggedin-app
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    restart: always
    environment:
      NODE_ENV: production
      DATABASE_URL: ${DATABASE_URL:-postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST:-pluggedin-postgres}:${POSTGRES_PORT:-5432}/${POSTGRES_DB}}
    depends_on:
      pluggedin-postgres:
        condition: service_healthy
      drizzle-migrate:
        condition: service_completed_successfully

volumes:
  pluggedin-postgres:
    driver: local
